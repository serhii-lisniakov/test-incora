{"version":3,"sources":["components/LeftBar/Header.js","components/LeftBar/ContactsList.js","components/LeftBar/LeftBar.js","components/Body/Header.js","assets/chatbg.jpg","components/Body/Form.js","store/posts/actions.js","assets/pencil.svg","components/Body/Post.js","store/comments/actions.js","components/Body/Posts.js","components/Body/Body.js","components/App.js","store/users/actions.js","store/store.js","store/users/reducer.js","store/posts/reducer.js","store/comments/reducer.js","index.js"],"names":["HeaderWrapper","styled","div","Header","ListWrapper","UserWrapper","withRouter","users","useSelector","store","map","user","i","to","id","name","LeftBarWrapper","LeftBarButton","LeftBar","onClick","document","getElementsByClassName","styledComponentId","classList","toggle","ContactsList","BodyHeader","InputWrapper","PostForm","form","PostsWrapper","PostInputWrapper","props","empty","PostInput","input","PostButton","button","PanelButton","Form","useState","title","setTitle","body","setBody","dispatch","useDispatch","isEmpty","setEmpty","newPost","e","preventDefault","userId","window","location","href","substr","trim","length","a","fetch","method","JSON","stringify","headers","then","response","json","type","payload","catch","err","alert","postNewPostAction","setTimeout","prev","onSubmit","placeholder","value","onChange","target","innerHTML","contains","showPanel","PostWrapper","Input","ContentEditable","pencil","Body","Comments","Comment","email","Actions","Button","Label","NoComments","p","FullPost","comments","custom","postId","match","params","replace","useEffect","res","console","error","history","back","data-overlay","dataset","overlay","html","comment","updPost","updatePostAction","deletePostAction","chatBg","Post","PostContent","PostTitle","PostBody","PostDetails","Link","Posts","posts","path","component","render","post","pathname","BodyWrapper","BodyEmptyWrapper","BodyEmpty","Container","App","basename","exact","rootReducer","combineReducers","state","action","filter","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.2799072a.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const HeaderWrapper = styled.div`\r\n    background: #23313f;\r\n    min-height: 70px;\r\n    position: relative;\r\n    padding: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #ffe600;\r\n    letter-spacing: 1px;\r\n`\r\n\r\nexport const Header = () => <HeaderWrapper>USERS</HeaderWrapper>","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nconst ListWrapper = styled.div`\r\n    background: #23313f;\r\n    border-bottom-left-radius: 25px;\r\n    height: calc(99vh - 70px);\r\n    overflow-y: scroll;\r\n    padding-bottom: 20px;\r\n    padding-top:10px;\r\n    &::-webkit-scrollbar {\r\n        width: 4px;\r\n        position: absolute;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: rgba(255, 255, 255, 0.5);\r\n        border-radius: 3px;\r\n    }\r\n    &:hover::-webkit-scrollbar {\r\n        \r\n    }\r\n`\r\nconst UserWrapper = styled.div`\r\n    color: #fff;\r\n    padding: 5px 10px;\r\n    font-size: 14px;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n    transition: .3s;\r\n    position: relative;\r\n    letter-spacing: 1px;\r\n    &:hover {\r\n        background: #2d3e50;\r\n        color: #ffe600;\r\n    }\r\n    &::after {\r\n        content: 'Posts →';\r\n        position: absolute;\r\n        top: 50%;\r\n        right: 10px;\r\n        transform: translateY(-50%);\r\n        font-size: 10px;\r\n\r\n    }\r\n`\r\n\r\nconst UsersList = () => {\r\n    const users = useSelector(store => store.users)\r\n\r\n    return (\r\n        <>\r\n            <ListWrapper>\r\n                {users.map((user, i) => {\r\n                    return (\r\n                        <Link key={i} to={`/user${user.id}`}>\r\n                            <UserWrapper>{user.name}</UserWrapper>\r\n                        </Link>\r\n                    )\r\n                })}\r\n            </ListWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(UsersList)","import React from 'react'\r\nimport { Header } from './Header'\r\nimport ContactsList from './ContactsList'\r\nimport styled from 'styled-components'\r\n\r\nexport const LeftBarWrapper = styled.div`\r\n    width: 30%;\r\n    min-width: 300px;\r\n    border-right: 1px solid #000;\r\n    transition: .3s;\r\n    z-index: 10;\r\n    @media (max-width: 768px) {\r\n        position: absolute;\r\n        left: -300px;\r\n    }\r\n    &.active {\r\n        left: 0;\r\n    }\r\n    @media (max-width: 376px) {\r\n        width: 100%;\r\n        left: -100%;\r\n    }\r\n`\r\nconst LeftBarButton = styled.div`\r\n    background: #ffe600;\r\n    opacity: 0.5;\r\n    width: 70px;\r\n    cursor: pointer;\r\n    height: 70px;\r\n    display: none;\r\n    position: absolute;\r\n    left: calc(100% + 2px);\r\n    transition: .3s;\r\n    @media (max-width: 768px) {\r\n        display: block;\r\n    }\r\n    z-index: 9;\r\n    &::after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-70%, -50%) rotate(135deg);\r\n        transition: .5s;\r\n        width: 10px;\r\n        height: 10px;\r\n        border-top: 3px solid #000;\r\n        border-left: 3px solid #000;\r\n    }\r\n    &:hover {\r\n        opacity: 1; \r\n    }\r\n    &.active {\r\n        width: calc(100vw - 300px);\r\n        opacity: 1;\r\n        &::after {\r\n            transform: translate(-50%, -50%) rotate(-45deg);\r\n        }\r\n        @media (max-width: 376px) {\r\n            width: 50px;\r\n            left: calc(100% - 50px);\r\n        }\r\n    }\r\n`\r\n\r\nexport const LeftBar = () => {\r\n\r\n    const showBar = () => {\r\n        document.getElementsByClassName(LeftBarWrapper.styledComponentId)[0].classList.toggle('active')\r\n        document.getElementsByClassName(LeftBarButton.styledComponentId)[0].classList.toggle('active')\r\n    }\r\n\r\n    return (\r\n        <LeftBarWrapper>\r\n            <LeftBarButton onClick={showBar} />\r\n            <Header />\r\n            <ContactsList />\r\n        </LeftBarWrapper>\r\n    )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HeaderWrapper } from '../LeftBar/Header'\r\n\r\nconst BodyHeader = styled(HeaderWrapper)`\r\n    letter-spacing: 2px;\r\n    @media (max-width: 475px) {\r\n        justify-content: flex-end;\r\n    }\r\n`\r\n\r\nexport const Header = ({name}) => <BodyHeader>{name}</BodyHeader>","export default __webpack_public_path__ + \"static/media/chatbg.f60957f3.jpg\";","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { postNewPostAction } from '../../store/posts/actions'\r\n\r\nconst InputWrapper = styled.div`\r\n    padding: 15px 30px;\r\n    margin-top: auto;\r\n    border-bottom-right-radius: 25px;\r\n    background: #23313f;\r\n    position: relative;\r\n    `\r\nconst PostForm = styled.form`\r\n    background: #23313f;\r\n    padding: 15px;\r\n    position: absolute;\r\n    bottom: -300px;\r\n    left: 0;\r\n    width: 100%;\r\n    transition: .3s;\r\n    display: flex;\r\n    &.active {\r\n        bottom: calc(100% - 25px);\r\n    }\r\n`\r\nconst PostsWrapper = styled.div`\r\n    flex-grow: 1;\r\n    margin-right: 20px;\r\n`\r\nconst PostInputWrapper = styled.div`\r\n    position: relative;\r\n    &::after {\r\n        position: absolute;\r\n        content: '${props => props.empty ? '' : 'Must be non-empty'}';\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        right: 10px;\r\n        color: red;\r\n        font-size: 10px;\r\n    }\r\n`\r\nconst PostInput = styled.input`\r\n    width: 100%;\r\n    height: 36px;\r\n    padding: 4px 30px 4px 15px;\r\n    background: transparent;\r\n    border: 1px solid ${props => props.empty ? '#fff' : 'red'};\r\n    border-radius: 10px;\r\n    outline: none;\r\n    transition: .2s;\r\n    color: #fff;\r\n    caret-color: #ffe600;\r\n    margin-top: 10px;\r\n    &::placeholder {\r\n        color: rgba(255, 255, 255, 0.5);\r\n    }\r\n    &:focus {\r\n        border: 1px solid #ffe600;\r\n    }\r\n`\r\nexport const PostButton = styled.button`\r\n    padding: 4px 15px;\r\n    background: transparent;\r\n    display: block;\r\n    color: #fff;\r\n    margin-left:auto;\r\n    border: 1px solid #fff;\r\n    cursor: pointer;\r\n    transition: .3s;\r\n    letter-spacing: 1px;\r\n    margin-top: 10px;\r\n    &:hover {\r\n        background: #fff;\r\n        color: #000;\r\n    }\r\n`\r\nconst PanelButton = styled(PostButton)`\r\n    margin-right: auto;\r\n    padding-right: 30px;\r\n    position: relative;\r\n    &::after {\r\n        position: absolute;\r\n        content: '↑';\r\n        right: 10px;\r\n        transition: .3s;\r\n    }\r\n    &.active::after {\r\n        transform: rotate(180deg)\r\n    }\r\n`\r\n\r\nexport const Form = () => {\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n    const dispatch = useDispatch()\r\n    const [isEmpty, setEmpty] = useState(true)\r\n\r\n    const showPanel = (e) => {\r\n        e.target.classList.toggle('active')\r\n        e.target.innerHTML = e.target.classList.contains('active') ? 'HIDE' : 'ADD'\r\n        document.getElementsByClassName(PostForm.styledComponentId)[0].classList.toggle('active')\r\n    }\r\n\r\n    const newPost = (e) => {\r\n        e.preventDefault()\r\n\r\n        const newPost = {\r\n            title,\r\n            body,\r\n            userId: window.location.href.substr(-1),\r\n        } \r\n\r\n        if (title.trim().length && body.trim().length) {\r\n            dispatch(postNewPostAction(newPost))\r\n            setTitle('')\r\n            setBody('')\r\n        } else {\r\n            setEmpty(!isEmpty)\r\n            setTimeout(() => setEmpty(prev => !prev), 2000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <InputWrapper>\r\n            <PostForm onSubmit={e => newPost(e)}>\r\n                <PostsWrapper>\r\n                    <PostInputWrapper empty={isEmpty}>\r\n                        <PostInput\r\n                            empty={isEmpty}\r\n                            placeholder='Enter the title'\r\n                            value={title}\r\n                            onChange={e => setTitle(e.target.value)}\r\n                        />\r\n                    </PostInputWrapper>\r\n                    <PostInputWrapper empty={isEmpty}>\r\n                        <PostInput \r\n                            empty={isEmpty}\r\n                            placeholder='Enter the body'\r\n                            value={body}\r\n                            onChange={e => setBody(e.target.value)}\r\n                        />      \r\n                    </PostInputWrapper>\r\n                </PostsWrapper>\r\n                <PostButton type='submit'>ADD</PostButton>\r\n            </PostForm>\r\n            <PanelButton onClick={e => showPanel(e)}>ADD</PanelButton>\r\n        </InputWrapper>\r\n    )\r\n}","export const loadPostsAction = (id) => async dispatch => {\r\n    const posts = await fetch(`https://jsonplaceholder.typicode.com/posts?userId=${id}`)\r\n                        .then(res => res.json())\r\n                        .catch(err => alert(err))\r\n    dispatch({\r\n        type: 'LOAD_POSTS',\r\n        payload: posts \r\n    })\r\n}\r\n\r\nexport const postNewPostAction = (newPost) => async dispatch => {\r\n    await fetch('https://jsonplaceholder.typicode.com/posts', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newPost),\r\n        headers: {\r\n            'Content-type': 'application/json; charset=UTF-8'\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .then((json) => dispatch({\r\n        type: 'POST_NEWPOST',\r\n        payload: json\r\n    }))\r\n    .catch(err => alert(err))\r\n    \r\n}\r\n\r\nexport const deletePostAction = (postId) => async dispatch => {\r\n    await fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`, {\r\n        method: 'DELETE',\r\n    })\r\n    .then((response) => response.json())\r\n    .catch(err => alert(err))\r\n    dispatch({\r\n        type: 'DELETE_POST',\r\n        payload: postId\r\n    })\r\n}\r\n\r\nexport const updatePostAction = (updPost) => async dispatch => {\r\n    await fetch(`https://jsonplaceholder.typicode.com/posts/${updPost.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updPost),\r\n        headers: {\r\n            'Content-type': 'application/json; charset=UTF-8'\r\n        }\r\n    })\r\n    .then((response) => response.json())\r\n    .catch(err => alert(err))\r\n    dispatch({\r\n        type: 'UPDATE_POST',\r\n        payload: updPost\r\n    })\r\n}","export default __webpack_public_path__ + \"static/media/pencil.2dd51d4c.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { loadCommentsAction } from \"../../store/comments/actions\";\r\nimport { deletePostAction, updatePostAction } from \"../../store/posts/actions\";\r\nimport { PostButton } from './Form'\r\nimport ContentEditable from 'react-contenteditable'\r\nimport pencil from '../../assets/pencil.svg'\r\n\r\nconst PostWrapper = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: rgba(0,0,0,0.9);\r\n    z-index: 100;\r\n    transition: 1s;\r\n`\r\nconst Input = styled(ContentEditable)`\r\n    font-size: 18px;\r\n    margin-top: 5px;\r\n    background: url(${pencil}) 99% center no-repeat;\r\n    padding: 15px 50px 15px 0;\r\n    /* outline: rgba(255,255,255,0.9); */\r\n`\r\nconst Body = styled.div`\r\n    border-radius: 25px;\r\n    padding: 20px;\r\n    width: 80%;\r\n    height: 80%;\r\n    background: #23313f;\r\n    position: relative;\r\n    overflow-y: scroll;\r\n    &::-webkit-scrollbar {\r\n        width: 0;\r\n    }\r\n`\r\nconst Comments = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    overflow-y: scroll;\r\n    max-height: 320px;\r\n    &::-webkit-scrollbar {\r\n        width: 0;\r\n    }\r\n`\r\nconst Comment = styled.div`\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n    color: #000;\r\n    padding: 10px 15px 20px;\r\n    background: rgba(141, 123, 21, 0.9);\r\n    min-width: 200px;\r\n    &:first-child {\r\n        margin-top: 20px;\r\n    }\r\n    &::after {\r\n        content: '${props => props.email}';\r\n        position: absolute;\r\n        bottom: 3px;\r\n        right: 20px;\r\n        font-size: 10px;\r\n        color: #fff;\r\n    }\r\n`\r\nconst Actions = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center;\r\n    margin-top: auto;\r\n    margin-top: 20px;\r\n`\r\nconst Button = styled(PostButton)`\r\n    margin: 0 15px;\r\n`\r\nconst Label = styled.div`\r\n    font-size: 14px;\r\n    font-style: italic;\r\n    color: rgba(141, 123, 21, 0.9);\r\n`\r\nconst NoComments = styled.p`\r\n    padding: 10px;\r\n    text-align: center;\r\n`\r\n\r\nexport const FullPost = (props) => {\r\n    const comments = useSelector(store => store.comments)\r\n    const dispatch = useDispatch()\r\n    const [title, setTitle] = useState(props.location.custom.title)\r\n    const [body, setBody] = useState(props.location.custom.body)\r\n    const postId = props.match.params.postId.replace(/[^\\d]/g, '')\r\n\r\n    useEffect(() => dispatch(loadCommentsAction(postId)), [])\r\n\r\n    const deletePost = () => {\r\n        window.history.back()\r\n        dispatch(deletePostAction(postId))\r\n    } \r\n\r\n    const updatePost = () => {\r\n        const updPost = {\r\n            id: +postId,\r\n            title,\r\n            body,\r\n            userId: +props.location.custom.userId\r\n        }\r\n        window.history.back()\r\n        dispatch(updatePostAction(updPost))\r\n    }\r\n\r\n    if (!props.location.custom) window.history.back();\r\n    return (\r\n        <PostWrapper \r\n            data-overlay={true} \r\n            onClick={(e) => e.target.dataset.overlay ? window.history.back() : false}\r\n        >\r\n            <Body>\r\n                <Label>Title:</Label>\r\n                <Input\r\n                    html={title}\r\n                    onChange={e => setTitle(e.target.value)}\r\n                />\r\n                <Label>Body:</Label>\r\n                <Input\r\n                    html={body}\r\n                    onChange={e => setBody(e.target.value)}\r\n                />\r\n                <Label>Comments:</Label>\r\n                <Comments>\r\n                    {!comments.length && <NoComments>No comments!</NoComments>}\r\n                    {comments.map((comment, i) => (\r\n                        <Comment key={i} email={comment.email}>\r\n                            {comment.name}\r\n                        </Comment>\r\n                    ))}\r\n                </Comments>\r\n                <Actions>\r\n                    <Button onClick={updatePost}>EDIT</Button>\r\n                    <Button onClick={deletePost}>DELETE POST</Button>\r\n                </Actions>\r\n            </Body>\r\n        </PostWrapper>\r\n    )\r\n}","export const loadCommentsAction = (id) => async dispatch => {\r\n    const comments = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}/comments`)\r\n                        .then(res => res.json())\r\n                        .catch(err => console.error(err))\r\n    dispatch({\r\n        type: 'LOAD_COMMENTS',\r\n        payload: comments\r\n    })\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport chatBg from '../../assets/chatbg.jpg'\r\nimport { loadPostsAction } from '../../store/posts/actions'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport { FullPost } from './Post'\r\n\r\nconst PostsWrapper = styled.div`\r\n    flex-grow: 1;\r\n    padding: 10px;\r\n    overflow-y: scroll;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background: url(${chatBg}) center center;\r\n    background-size: cover;\r\n    transition: .5s;\r\n    border-bottom-right-radius: 25px;\r\n    &::-webkit-scrollbar {\r\n        width: 4px;\r\n        visibility: hidden;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: rgba(255, 255, 255, 0.5);\r\n        border-radius: 3px;\r\n    }\r\n`\r\nconst Post = styled.div`\r\n    padding: 20px;\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n    border-radius: 15px;\r\n    background: rgba(141, 123, 21, 0.9);\r\n    min-width: 130px;\r\n    box-shadow: 0 0 10px 0 #0000002f;\r\n    position: relative;\r\n    transition: .5s;\r\n    display: flex;\r\n    @media (max-width: 475px) {\r\n        flex-direction: column;\r\n    }\r\n`\r\nconst PostContent = styled.div`\r\n    flex-grow: 1;\r\n`\r\nconst PostTitle = styled.div`\r\n    text-align: center;\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.5);\r\n`\r\nconst PostBody = styled.div`\r\n    padding-top: 10px;\r\n    padding-right: 20px;\r\n`\r\nconst PostDetails = styled(Link)`\r\n    border: none;\r\n    border-left: 1px solid rgba(255, 255, 255, 0.5);\r\n    background: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    outline: none;\r\n    transition: .3s;\r\n    padding-left: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: auto;\r\n    &:hover {\r\n        color: #000;\r\n    }\r\n    @media (max-width: 475px) {\r\n        border-left: none;\r\n        border-top: 1px solid rgba(255, 255, 255, 0.5);\r\n        margin-top: 10px;\r\n        padding-top: 10px;\r\n        justify-content: center;\r\n    }\r\n`\r\n\r\nexport const Posts = ({userId}) => {\r\n    const dispatch = useDispatch()\r\n    const posts = useSelector(store => store.posts)\r\n    useEffect(() => dispatch(loadPostsAction(userId)), [])\r\n\r\n    return (\r\n        <PostsWrapper>\r\n            <Route path={`/user${userId}/:postId`} component={FullPost}/>\r\n            <Route path={`/user${userId}`} render={() => (\r\n                <>\r\n                    {posts.map((post, i) => (\r\n                        <Post key={i}>\r\n                            <PostContent>\r\n                                <PostTitle>{post.title}</PostTitle>\r\n                                <PostBody>{post.body}</PostBody>\r\n                            </PostContent>\r\n                            <PostDetails to={{\r\n                                pathname: `/user${userId}/post${post.id}`,\r\n                                custom: {\r\n                                    id: post.id,\r\n                                    title: post.title,\r\n                                    body: post.body,\r\n                                    userId\r\n                                }\r\n                            }}>DETAILS</PostDetails>\r\n                        </Post>\r\n                    ))}\r\n                </>\r\n            )}/>\r\n        </PostsWrapper>\r\n    )\r\n}","import React from 'react'\r\nimport { Header } from './Header'\r\nimport { Posts } from './Posts'\r\nimport { Form } from './Form'\r\nimport styled from 'styled-components'\r\n\r\nconst BodyWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    width: 70%;\r\n    transition: .5s;\r\n    @media (max-width: 768px) {\r\n        width: 100%;\r\n\r\n    }\r\n`\r\nconst BodyEmptyWrapper = styled(BodyWrapper)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-style: italic;\r\n    font-size: 14px;\r\n    color: rgba(255, 255, 255, 0.2);\r\n`\r\n\r\nexport const Body = ({user}) => {\r\n    return (\r\n        <BodyWrapper>\r\n            <Header name={user.name}/>\r\n            <Posts userId={user.id}/>\r\n            <Form/>\r\n        </BodyWrapper>\r\n    )\r\n}\r\n\r\nexport const BodyEmpty = () => <BodyEmptyWrapper>Select a user</BodyEmptyWrapper>","import React, { useEffect } from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport { LeftBar } from './LeftBar/LeftBar'\nimport { Body, BodyEmpty } from './Body/Body'\nimport styled from 'styled-components'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadUsersAction } from '../store/users/actions';\n\nconst Container = styled.div`\n  max-width: 1170px;\n  margin-right: auto;\n  margin-left: auto;\n  display: flex;\n  background: #23313f;\n  height: 99vh;\n  max-height: 99vh;\n  border-bottom-left-radius: 25px;\n  border-bottom-right-radius: 25px;\n  box-shadow: 1px 0 10px 0 #000;\n  margin-bottom: 10px;\n  overflow: hidden;\n  @media (max-width: 1025px) {\n    height: 100vh;\n    max-height: 100vh;\n    margin-bottom: 0;\n    border-radius: 0;\n  }\n`\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const users = useSelector(store => store.users)\n  useEffect(() => dispatch(loadUsersAction()), [])\n\n  return (\n    <Container>\n      <Router basename={'/test-incora'}>\n          <LeftBar/>\n          <Route exact path=\"/\" render={() => <BodyEmpty />}/>\n            {users.map((user, i) => {\n              return (\n                  <Route \n                      key={i}\n                      path={`/user${user.id}`} \n                      render={() => <Body user={user}/>} \n                  />\n              )\n            })}\n      </Router>\n    </Container>\n  )\n}\n\nexport default App;\n","export const loadUsersAction = () => async dispatch => {\r\n    const users = await fetch('https://jsonplaceholder.typicode.com/users')\r\n                        .then(res => res.json())\r\n    dispatch({\r\n        type: 'LOAD_USERS',\r\n        payload: users \r\n    })\r\n}","import { applyMiddleware, createStore } from 'redux';\r\nimport { combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk';\r\nimport { usersReducer } from './users/reducer';\r\nimport { postsReducer } from './posts/reducer';\r\nimport { commentsReducer } from './comments/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    users: usersReducer,\r\n    posts: postsReducer,\r\n    comments: commentsReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    ),\r\n)","export const usersReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'LOAD_USERS':\r\n            return action.payload\r\n        default: return state\r\n    }\r\n}","export const postsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'LOAD_POSTS':\r\n            return action.payload\r\n        case 'POST_NEWPOST': \r\n            return [ action.payload, ...state ]\r\n        case 'DELETE_POST':\r\n            return state.filter(post => post.id !== +action.payload)\r\n        case 'UPDATE_POST':\r\n            return state.map(post => post.id === action.payload.id ? action.payload : post)\r\n        default: return state\r\n    }\r\n}","export const commentsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'LOAD_COMMENTS':\r\n            return action.payload\r\n        default: return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}